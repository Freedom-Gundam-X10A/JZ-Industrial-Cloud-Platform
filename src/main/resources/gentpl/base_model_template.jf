package #(baseModelPackageName);
#if(extendsJBoltBaseModel??)
import #(mainPkg?? "cn.jbolt").base.JBoltBaseModel;
#else
import com.jfinal.plugin.activerecord.Model;
import com.jfinal.plugin.activerecord.IBean;
#end

/**
 * Generated by JBolt, do not modify this file.
 */
#if (generateChainSetter)
@SuppressWarnings({"serial", "unchecked"})
#else
@SuppressWarnings("serial")
#end
#if(extendsJBoltBaseModel)
public abstract class #(tableMeta.baseModelName)<M extends #(tableMeta.baseModelName)<M>> extends JBoltBaseModel<M>{
#else
public abstract class #(tableMeta.baseModelName)<M extends #(tableMeta.baseModelName)<M>> extends Model<M> implements IBean {
#end

#set(b = generateChainSetter)
#for(cm : tableMeta.columnMetas)
	#if (cm.remarks)
	/**
	 * #(cm.remarks)
	 */
	 #end
	#set(argName = javaKeyword.contains(cm.attrName) ? '_' + cm.attrName : cm.attrName)
	public #(b ? 'M' : 'void') set#(firstCharToUpperCase(cm.attrName))(#(cm.javaType) #(argName)) {
		set("#(cm.name)", #(argName));
		#if (b)
		return (M)this;
		#end
	}
	
	#if (cm.remarks)
	/**
	 * #(cm.remarks)
	 */
	 #end
	#set(getterOfModel = getterTypeMap.get(cm.javaType))
	#if (isBlank(getterOfModel))
		#set(getterOfModel = 'get')
	#end
	public #(cm.javaType) get#(firstCharToUpperCase(cm.attrName))() {
		return #(getterOfModel)("#(cm.name)");
	}

#end
}

